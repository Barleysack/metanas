<bound method Module.named_children of ModuleList(
  (0): SearchCell(
    (preproc0): StdConv(
      (net): Sequential(
        (0): ReLU()
        (1): Conv2d(84, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (preproc1): StdConv(
      (net): Sequential(
        (0): ReLU()
        (1): Conv2d(84, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (dag): ModuleList(
      (0): ModuleList(
        (0): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (1): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
      )
      (1): ModuleList(
        (0): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (1): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (2): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
      )
      (2): ModuleList(
        (0): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (1): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (2): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (3): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
      )
      (3): ModuleList(
        (0): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (1): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (2): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (3): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (4): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
      )
    )
  )
  (1): SearchCell(
    (preproc0): StdConv(
      (net): Sequential(
        (0): ReLU()
        (1): Conv2d(84, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (preproc1): StdConv(
      (net): Sequential(
        (0): ReLU()
        (1): Conv2d(84, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (dag): ModuleList(
      (0): ModuleList(
        (0): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (1): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
      )
      (1): ModuleList(
        (0): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (1): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (2): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
      )
      (2): ModuleList(
        (0): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (1): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (2): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (3): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
      )
      (3): ModuleList(
        (0): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (1): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (2): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (3): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (4): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
      )
    )
  )
  (2): SearchCell(
    (preproc0): StdConv(
      (net): Sequential(
        (0): ReLU()
        (1): Conv2d(84, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (preproc1): StdConv(
      (net): Sequential(
        (0): ReLU()
        (1): Conv2d(84, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (dag): ModuleList(
      (0): ModuleList(
        (0): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (1): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
      )
      (1): ModuleList(
        (0): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (1): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (2): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
      )
      (2): ModuleList(
        (0): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (1): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (2): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (3): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
      )
      (3): ModuleList(
        (0): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (1): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (2): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (3): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (4): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
      )
    )
  )
  (3): SearchCell(
    (preproc0): StdConv(
      (net): Sequential(
        (0): ReLU()
        (1): Conv2d(84, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (preproc1): StdConv(
      (net): Sequential(
        (0): ReLU()
        (1): Conv2d(84, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (2): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (dag): ModuleList(
      (0): ModuleList(
        (0): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (1): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
      )
      (1): ModuleList(
        (0): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (1): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (2): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
      )
      (2): ModuleList(
        (0): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (1): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (2): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (3): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
      )
      (3): ModuleList(
        (0): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (1): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (2): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (3): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
        (4): MixedOp(
          (_ops): ModuleList(
            (0): Sequential(
              (0): PoolBN(
                (pool): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (1): Sequential(
              (0): PoolBN(
                (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
                (bn): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (2): Identity()
            (3): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (4): Sequential(
              (0): SepConv(
                (net): Sequential(
                  (0): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                  (1): DilConv(
                    (net): Sequential(
                      (0): ReLU()
                      (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=28, bias=False)
                      (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                    )
                  )
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (5): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (6): Sequential(
              (0): DilConv(
                (net): Sequential(
                  (0): ReLU()
                  (1): Conv2d(28, 28, kernel_size=(5, 5), stride=(1, 1), padding=(4, 4), dilation=(2, 2), groups=28, bias=False)
                  (2): Conv2d(28, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (3): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
                )
              )
              (1): DropPath_(p=0.0, inplace)
            )
            (7): Sequential(
              (0): Zero()
              (1): DropPath_(p=0.0, inplace)
            )
          )
        )
      )
    )
  )
)>